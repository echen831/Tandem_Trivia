{"version":3,"sources":["util.js","components/question.jsx","components/game.jsx","App.js","index.js"],"names":["shuffle","arr","dupArr","slice","forEach","num","i","randIdx","Math","floor","random","length","temp","Question","question","questionIdx","score","handleSubmit","ans","useState","answers","currAnsIdx","setCurrAnsIdx","correct","correctAns","currAns","setCurrAns","submitted","setSubmitted","answer1","useRef","answer2","answer3","answer4","refs","className","map","answer","idx","id","onClick","ref","trim","current","innerText","style","backgroundColor","opacity","setTimeout","Game","Util","QUESTIONS","questions","currQuestIdx","setCurrQuestIdx","setScore","submitAns","incorrect","href","target","endMessage","window","location","reload","src","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7105654f.chunk.js","sourcesContent":["export const shuffle = (arr) => {\n    let dupArr = arr.slice(0);\n\n    dupArr.forEach((num, i) => {\n        let randIdx = i + Math.floor(Math.random() * arr.length - i)\n\n        let temp = dupArr[i];\n        dupArr[i] = dupArr[randIdx];\n        dupArr[randIdx] = temp;\n    })\n\n    return dupArr;    \n}","import React, { useState, useRef } from 'react';\nimport * as Util from '../util';\n\nexport const Question = ({ question, questionIdx, score, handleSubmit, ans }) => {\n    const [ answers, setAnswers ] = useState(ans);\n    const [ currAnsIdx, setCurrAnsIdx ] = useState(0);\n    const [ correctAns, setCorrectAns ] = useState(question.correct);\n    const [ currAns, setCurrAns ] = useState('');\n    const [ submitted, setSubmitted ] = useState(false);\n\n    const answer1 = useRef();\n    const answer2 = useRef();\n    const answer3 = useRef();\n    const answer4 = useRef();\n\n    const refs = [answer1, answer2, answer3, answer4]\n\n    const submit = () => {\n        if (currAns.trim() === '') return;\n\n        if (answer1.current.innerText === correctAns) {\n            answer1.current.style.backgroundColor = 'green';\n        } else if (answer1.current.innerText === currAns && answer1.current.innerText !== correctAns) {\n            answer1.current.style.opacity = 0.5;\n        } else {\n            answer1.current.style.backgroundColor = 'red';\n            answer1.current.style.opacity = 0.5;\n        }\n        if (answer2.current.innerText === correctAns) {\n            answer2.current.style.backgroundColor = 'green';\n        } else if (answer2.current.innerText === currAns && answer2.current.innerText !== correctAns) {\n            answer2.current.style.opacity = 0.5;\n        } else {\n            answer2.current.style.backgroundColor = 'red';\n            answer2.current.style.opacity = 0.5;\n        }\n        if (answer3.current.innerText === correctAns) {\n            answer3.current.style.backgroundColor = 'green';\n        } else if (answer3.current.innerText === currAns && answer3.current.innerText !== correctAns) {\n            answer3.current.style.opacity = 0.5;\n        } else {\n            answer3.current.style.backgroundColor = 'red';\n            answer3.current.style.opacity = 0.5;   \n        }\n        if (answer4.current.innerText === correctAns) {\n            answer4.current.style.backgroundColor = 'green';\n        } else if (answer4.current.innerText === currAns && answer4.current.innerText !== correctAns) {\n            answer4.current.style.opacity = 0.5;\n        } else {\n            answer4.current.style.backgroundColor = 'red';\n            answer4.current.style.opacity = 0.5; \n        }\n        setSubmitted(true);\n        setTimeout(() => setSubmitted(false), 3000);\n    }\n\n    return (\n        <div className={ !submitted ? 'questions-container fade-in' : 'questions-container fade-out'}>\n            <h2>Question {questionIdx + 1}: {question.question}</h2>\n            <div className={'answer-container'}>\n                {answers.map((answer, idx) => (\n                    <div\n                        id={idx+1 === currAnsIdx ? 'selected' : ''}\n                        className='answer'\n                        onClick={()=>{setCurrAnsIdx(idx+1); setCurrAns(answer)}}\n                        ref={refs[idx]}\n                    >\n                        {answer}\n                    </div>\n                ))}\n\n            </div>\n            <p id={!submitted ? '' : 'hide'} \n                className='submit-btn'\n                    onClick={() => {handleSubmit(correctAns, currAns); submit()}}>Submit</p>\n            <p id={submitted ? '' : 'hide'}\n                className='score'\n                    >Current Score: {score}</p>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport QUESTIONS from '../Apprentice_TandemFor400_Data.json';\nimport * as Util from '../util';\nimport { Question } from '../components/question'\n\nexport const Game = () => {\n    const [ questions, setQuestions ] = useState(Util.shuffle(QUESTIONS).slice(0,10));\n    const [ currQuestIdx, setCurrQuestIdx ] = useState(0);\n    const [ score, setScore ] = useState(0);\n\n    const handleSubmit = (correctAns, submitAns) => {\n        if (submitAns.trim().length === 0) return;\n\n        if (correctAns === submitAns) {\n            setScore(score + 10);\n        }\n\n        setTimeout(() => setCurrQuestIdx(currQuestIdx + 1), 3000)\n    }\n\n    const endMessage = (score) => {\n\n        if (score === 100) {\n            return \"You have a perfect score!\"\n        } else if (score >= 80) {\n            return \"What an amazing score!\"\n        } else if (score >= 60) {\n            return \"A couple hicups, but still an honorable score!\"\n        } else if (score >= 40) {\n            return \"Maybe try a little harder next time?\"\n        } else if (score >= 20) {\n            return \"Were you even trying?\"\n        } else {\n            return \"Please press the refresh button and try again!\"\n        } \n    }\n\n    const reload = () => {\n        window.location.reload();\n        return false;\n    }\n\n\n    return (\n        <div className='game-container'>\n            <div>\n                { questions.map((question, idx) => (\n                    <div id={currQuestIdx !== idx ? 'hide' : ''}>\n                        <Question key={idx}\n                                  questionIdx={idx}\n                                  ans={Util.shuffle([...question.incorrect, question.correct])}\n                                  score={score}\n                                  question={question}\n                                  handleSubmit={handleSubmit}/>\n                    </div>\n                ))}\n            </div>\n            <div className='splash-footer'>\n                <p>Created by: Eric Chen</p>\n                <p>Please check out my portfolio <a href=\"https://echen831.github.io/Eric-Chen/\" target='_blank'>here!</a></p>\n            </div>\n            <div className='fade-in end-game' id={currQuestIdx === 10 ? '' : 'hide'}>\n                <div className='end-container'>\n                    <h2>Thank you for playing!</h2>\n                    <p>Your Score is: {score}</p>\n                    <p>{endMessage(score)}</p>\n                    <p className='submit-btn' onClick={reload}>Play Again</p>\n                </div>\n                <div className='end-img-container'>\n                    <img src='https://i.pinimg.com/originals/e5/94/e7/e594e7a30ba52cae164bf95aa6a8651b.gif' alt=\"\"/>\n                </div>\n            </div>\n        </div>\n    )\n\n}","import './App.css';\nimport { Game } from './components/game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Tandem Trivia</h1>\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}