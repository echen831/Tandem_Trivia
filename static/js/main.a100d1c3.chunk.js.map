{"version":3,"sources":["util.js","components/question.jsx","components/game.jsx","App.js","index.js"],"names":["shuffle","arr","dupArr","slice","forEach","num","i","randIdx","Math","floor","random","length","temp","Question","question","score","handleSubmit","useState","Util","incorrect","correct","answers","currAnsIdx","setCurrAnsIdx","correctAns","currAns","setCurrAns","submitted","setSubmitted","test1","useRef","test2","test3","test4","test","className","map","answer","idx","id","onClick","ref","trim","current","innerText","style","backgroundColor","opacity","setTimeout","Game","QUESTIONS","questions","currQuestIdx","setCurrQuestIdx","setScore","submitAns","endMessage","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a100d1c3.chunk.js","sourcesContent":["export const shuffle = (arr) => {\n    let dupArr = arr.slice(0);\n\n    dupArr.forEach((num, i) => {\n        let randIdx = i + Math.floor(Math.random() * arr.length - i)\n\n        let temp = dupArr[i];\n        dupArr[i] = dupArr[randIdx];\n        dupArr[randIdx] = temp;\n    })\n\n    return dupArr;    \n}","import React, { useState, useRef } from 'react';\nimport * as Util from '../util';\n\nexport const Question = ({ question, score, handleSubmit }) => {\n    const [ answers, setAnswers ] = useState(Util.shuffle([...question.incorrect, question.correct]));\n    const [ currAnsIdx, setCurrAnsIdx ] = useState(0);\n    const [ correctAns, setCorrectAns ] = useState(question.correct);\n    const [ currAns, setCurrAns ] = useState('');\n    const [ submitted, setSubmitted ] = useState(false);\n\n    const test1 = useRef();\n    const test2 = useRef();\n    const test3 = useRef();\n    const test4 = useRef();\n\n    const test = [test1, test2, test3, test4]\n\n    const submit = () => {\n        if (currAns.trim() === '') return;\n\n        if (test1.current.innerText === correctAns) {\n            test1.current.style.backgroundColor = 'green';\n        } else {\n            test1.current.style.opacity = 0.5;\n        }\n        if (test2.current.innerText === correctAns) {\n            test2.current.style.backgroundColor = 'green';\n        } else {\n            test2.current.style.opacity = 0.5;\n        }\n        if (test3.current.innerText === correctAns) {\n            test3.current.style.backgroundColor = 'green';\n        } else {\n            test3.current.style.opacity = 0.5;\n        }\n\n        if (test4.current.innerText === correctAns) {\n            test4.current.style.backgroundColor = 'green';\n        } else {\n            test4.current.style.opacity = 0.5;\n        }\n        setSubmitted(true);\n        setTimeout(() => setSubmitted(false), 1500);\n    }\n\n    return (\n        <div className='question-container'>\n            <div className={'answer-container'}>\n                {answers.map((answer, idx) => (\n                    <div\n                        id={idx+1 === currAnsIdx ? 'selected' : ''}\n                        className='answer'\n                        onClick={()=>{setCurrAnsIdx(idx+1); setCurrAns(answer)}}\n                        ref={test[idx]}\n                    >\n                        {answer}\n                    </div>\n                ))}\n\n            </div>\n            <p id={!submitted ? '' : 'hide'} \n               className='submit-btn'\n                onClick={() => {handleSubmit(correctAns, currAns); submit()}}>Submit</p>\n            <p id={submitted ? '' : 'hide'}\n               className='score'\n                >Current Score: {score}</p>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport QUESTIONS from '../Apprentice_TandemFor400_Data.json';\nimport * as Util from '../util';\nimport { Question } from '../components/question'\n\nexport const Game = () => {\n    const [ questions, setQuestions ] = useState(Util.shuffle(QUESTIONS).slice(0,10));\n    const [ currQuestIdx, setCurrQuestIdx ] = useState(0);\n    const [ score, setScore ] = useState(0);\n    const [ name, setName ] = useState('Eric');\n\n    const handleSubmit = (correctAns, submitAns) => {\n        if (submitAns.trim().length === 0) return;\n\n        if (correctAns === submitAns) {\n            setScore(score + 10);\n        }\n\n        setTimeout(() => setCurrQuestIdx(currQuestIdx + 1), 1500)\n    }\n\n    const endMessage = (score) => {\n\n        if (score === 100) {\n            return \"You have a perfect score!\"\n        } else if (score >= 80) {\n            return \"You are amazing!\"\n        } else if (score >= 60) {\n            return \"A couple hicups, but still honorable score!\"\n        } else if (score >= 40) {\n            return \"Maybe try a little harder next time?\"\n        } else if (score >= 20) {\n            return \"Were you even trying?\"\n        } else {\n            return \"Please press the refresh button and try again!\"\n        } \n    }\n\n\n    return (\n        <div className='game-container'>\n            <div>\n                { questions.map((question, idx) => (\n                    <div id={currQuestIdx !== idx ? 'hide' : ''}\n                         className='questions-container'>\n                        <h2>Question { idx + 1 }: {question.question}</h2>\n                        <Question key={idx}\n                                  score={score}\n                                  question={question}\n                                  handleSubmit={handleSubmit}/>\n                    </div>\n                ))}\n            </div>\n            <div id={currQuestIdx === 10 ? '' : 'hide'}>\n                <p>Your Score is: {score}</p>\n                <p>{endMessage(score)}</p>\n            </div>\n        </div>\n    )\n\n}","import './App.css';\nimport { Game } from './components/game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Tandem Trivia</h1>\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}